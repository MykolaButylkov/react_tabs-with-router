{"version":3,"sources":["components/TabsPage.tsx","App.tsx","index.tsx"],"names":["TabsPage","tabs","useParams","tabId","memoizedTabid","useMemo","find","tab","id","className","map","classNames","to","title","content","App","isActive","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"uPAUaA,EAAsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpC,EAAwBC,cAAhBC,aAAR,MAAgB,IAAhB,EACMC,EAAgBC,mBACpB,kBAAMJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,OAAQ,CAACF,IAG7C,OACE,qCACE,qBAAKQ,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAH,GAAG,OACX,oBACE,UAAQ,MACRE,UACEE,IAAW,CAAE,YAAaR,IAAUI,EAAIC,KAH5C,SAOE,cAAC,IAAD,CAAMI,GAAE,gBAAWL,EAAIC,IAAvB,SAA8BD,EAAIM,SAF7BN,EAAIC,WAOjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,UACgB,OAAbL,QAAa,IAAbA,OAAA,EAAAA,EAAeU,UAAW,4BCxB7Bb,EAAO,CACX,CAAEO,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WACjB,OACE,qCACE,qBACEN,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEG,GAAG,IACHH,UAAW,gBAAGO,EAAH,EAAGA,SAAH,OAAkBL,IAC3B,cACA,CAAE,YAAaK,KAJnB,kBASA,cAAC,IAAD,CACEJ,GAAG,QACHH,UAAW,gBAAGO,EAAH,EAAGA,SAAH,OAAkBL,IAC3B,cACA,CAAE,YAAaK,KAJnB,yBAaN,qBAAKP,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,KAAK,IAAIC,QAAS,oBAAIT,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOQ,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUN,GAAG,IAAIO,SAAO,MAEpD,eAAC,IAAD,CACEF,KAAK,OACLC,QACE,qCACE,oBAAIT,UAAU,QAAd,uBACA,cAAC,IAAD,OALN,UASE,cAAC,IAAD,CACEW,OAAK,EACLF,QACE,cAAC,EAAD,CAAUjB,KAAMA,MAGpB,cAAC,IAAD,CACEgB,KAAK,eACLC,QACE,cAAC,EAAD,CAAUjB,KAAMA,SAKtB,cAAC,IAAD,CACEgB,KAAK,IACLC,QAAS,oBAAIT,UAAU,QAAd,yCC1EvBY,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d8730a7c.chunk.js","sourcesContent":["import { FC, useMemo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n};\n\nexport const TabsPage: FC<Props> = ({ tabs }) => {\n  const { tabId = '0' } = useParams();\n  const memoizedTabid = useMemo(\n    () => tabs.find(tab => tab.id === tabId), [tabs],\n  );\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={\n                classNames({ 'is-active': tabId === tab.id })\n              }\n              key={tab.id}\n            >\n              <Link to={`/tabs/${tab.id}`}>{tab.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {memoizedTabid?.content || 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  NavLink, Navigate, Outlet, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { TabsPage } from './components/TabsPage';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  return (\n    <>\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'is-active': isActive },\n              )}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/tabs\"\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'is-active': isActive },\n              )}\n            >\n              Tabs\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route\n              path=\"tabs\"\n              element={(\n                <>\n                  <h1 className=\"title\">Tabs page</h1>\n                  <Outlet />\n                </>\n              )}\n            >\n              <Route\n                index\n                element={(\n                  <TabsPage tabs={tabs} />\n                )}\n              />\n              <Route\n                path=\"/tabs/:tabId\"\n                element={(\n                  <TabsPage tabs={tabs} />\n                )}\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}